{"version":3,"sources":["app/Shared/components/Dropdown/DropdownMenuVoice.js","app/views/Solution2/components/SpeechSynthesis.js","app/assets/download.svg","app/assets/play.svg","app/assets/stop.svg","app/assets/pause.svg","app/views/Solution2/components/SpeechSynthesisContainer.js"],"names":["StyledDropdown","styled","Dropdown","SpeechSynthesis","mp3data","onChangeVoice","state","useDispatch","useSelector","audioReducer","useState","audioUrl","setAudio","Sound","status","PLAYING","playStatus","setPlayStatus","position","setPosition","setSoundComp","text","setText","playing","setPlaying","onFetch","setOnFetch","duration","setDuration","fetchData","a","voiceId","token","options","method","headers","data","qs","stringify","url","axios","audio","useEffect","className","Wrapper","FlexContent","Paper","PaperContent","Textarea","onChange","event","target","value","PlayerContainer","CenterDiv","P","Dropdown1","onClick","playFromPosition","onLoad","sound","onPlaying","onLoading","onFinishedPlaying","PAUSED","muted","MediaPlayer","Img","src","ResumeIcon","PlayIcon","alert","StyledStop","StopIcon","min","max","StyledButton","to","icon","DownloadIcon","isMarginLeft","img","props","div","p","textarea","Button","map","id","label","name","selected","setState","menu","key","index","Item","overlay","trigger","type","module","exports","SpeechSynthesisContainer","useContext","PreloaderContext","initialStates","loading","onChangeText"],"mappings":"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","file":"static/js/13.bbdccb9e.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Menu, Dropdown, Icon } from 'antd'\r\n\r\nimport { useState } from '../../../../packages/core'\r\n\r\nexport const DropdownMenuVoice = ({\r\n  data = [],\r\n  className,\r\n  onClick\r\n}) => {\r\n  const options = data.map(({ id, name }) => ({\r\n    value: id,\r\n    label: name\r\n  }))\r\n\r\n  const [state, setState] = useState({\r\n    selected: options[0].label,\r\n    id: options[0].value\r\n  })\r\n\r\n  const menu = (\r\n    <Menu\r\n      onClick={({ key }) => {\r\n        setState({ selected: options[key].label })\r\n        onClick(options[key].value)\r\n      }}\r\n    >\r\n      {options.map(({ label }, index) => {\r\n        return <Menu.Item key={index}>{label}</Menu.Item>\r\n      })}\r\n    </Menu>\r\n  )\r\n  return (\r\n    <StyledDropdown className={`${className} max-width-mobile`} overlay={menu} trigger={['click']}>\r\n        <Link className='ant-dropdown-link' to='#'>\r\n          {state.selected} <Icon type='down' />\r\n        </Link>\r\n    </StyledDropdown>\r\n  )\r\n}\r\n\r\nconst StyledDropdown = styled(Dropdown)`\r\n  font-size: 18px;\r\n`\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Sound from 'react-sound'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport qs from 'qs'\r\nimport axios from 'axios'\r\n\r\nimport { Slider } from 'antd'\r\n\r\nimport DownloadIcon from '../../../assets/download.svg'\r\nimport PlayIcon from '../../../assets/play.svg'\r\nimport StopIcon from '../../../assets/stop.svg'\r\nimport ResumeIcon from '../../../assets/pause.svg'\r\n\r\nimport Button from '../../../Shared/components/Button/Button'\r\nimport { DropdownMenuVoice } from '../../../Shared/components/Dropdown/DropdownMenuVoice'\r\n\r\nexport const SpeechSynthesis = ({ mp3data, onChangeVoice, state }) => {\r\n  const dispatch = useDispatch()\r\n  const audioRedux = useSelector(state => state.audioReducer)\r\n\r\n  const [audioUrl, setAudio] = useState('')\r\n  const [playStatus, setPlayStatus] = useState(Sound.status.PLAYING)\r\n  const [position, setPosition] = useState(0)\r\n  const [soundComp, setSoundComp] = useState(null)\r\n  const [text, setText] = useState('')\r\n  const [playing, setPlaying] = useState(false)\r\n  const [onFetch, setOnFetch] = useState(true)\r\n  const [duration, setDuration] = useState(null)\r\n  const [stop, setStop] = useState(false)\r\n  const [resume, setResume] = useState(false)\r\n\r\n  const fetchData = async () => {\r\n    const { voiceId, token } = state\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n      data: qs.stringify({\r\n        text,\r\n        voiceId,\r\n        token\r\n      }),\r\n      url: 'http://103.74.122.136:8086/api/v1/path'\r\n    }\r\n    const audio = await axios(options)\r\n    if (audio.data.status === 0) {\r\n      setAudio(audio.data.data.url)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const onFetchPlayButton = () => {\r\n    if (text === '') {\r\n      alert('Vui lòng nhập nội dung')\r\n    } else {\r\n      // setTimeout(() => {\r\n      setPlaying(!playing)\r\n      fetchData()\r\n      setPlayStatus(Sound.status.PLAYING)\r\n      // }, 1000)\r\n    }\r\n  }\r\n\r\n  const onClickPlayButton = () => {\r\n    setPlaying(true)\r\n    setPlayStatus(Sound.status.PLAYING)\r\n  }\r\n\r\n  const onClickPausedButton = () => {\r\n    setPlaying(false)\r\n    setOnFetch(false)\r\n    setPlayStatus(Sound.status.PAUSED)\r\n  }\r\n\r\n  const onChangeText = event => {\r\n    setText(event.target.value)\r\n    setAudio('')\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className='margin-bottom-large'>\r\n        <h1 className='application__heading text-center margin-bottom-medium advantage__heading'>\r\n          Trải nghiệm\r\n        </h1>\r\n        <Wrapper>\r\n          <FlexContent className='container'>\r\n            <Paper>\r\n              <PaperContent>\r\n                <Textarea onChange={onChangeText}>\r\n                  Nội dung trải nghiệm\r\n                </Textarea>\r\n              </PaperContent>\r\n            </Paper>\r\n            <PlayerContainer className='row'>\r\n              <CenterDiv className='col-md-5 d-block-mobile'>\r\n                <P>Giọng đọc</P>\r\n                <Dropdown1 data={mp3data} onClick={onChangeVoice} />\r\n              </CenterDiv>\r\n              <div className='col-md-4'>\r\n                <Sound\r\n                  url={audioUrl}\r\n                  playFromPosition={position}\r\n                  playStatus={playStatus}\r\n                  onLoad={sound => {\r\n                    setSoundComp(sound)\r\n                  }}\r\n                  onPlaying={sound => {\r\n                    setPosition(sound.position)\r\n                  }}\r\n                  onLoading={sound => setDuration(sound.duration)}\r\n                  onFinishedPlaying={() => {\r\n                    setPlaying(false)\r\n                    setOnFetch(true)\r\n                    setPlayStatus(Sound.status.PAUSED)\r\n                    setPosition(0)\r\n                  }}\r\n                  muted='muted'\r\n                />\r\n                <MediaPlayer>\r\n                  {!playing ? (\r\n                    onFetch ? (\r\n                      <Img src={PlayIcon} onClick={onFetchPlayButton} />\r\n                    ) : (\r\n                      <Img src={PlayIcon} onClick={onClickPlayButton} />\r\n                    )\r\n                  ) : (\r\n                    <Img src={ResumeIcon} onClick={onClickPausedButton} />\r\n                  )}\r\n                  <StyledStop\r\n                    playing={!playing && onFetch}\r\n                    src={StopIcon}\r\n                    onClick={() => {\r\n                      setPlaying(false)\r\n                      setOnFetch(true)\r\n                      setPosition(0)\r\n                      setPlayStatus(Sound.status.PAUSED)\r\n                    }}\r\n                  />\r\n                  <Slider\r\n                    value={position}\r\n                    min={0}\r\n                    max={(duration && duration) || 100}\r\n                    onChange={value => setPosition(value)}\r\n                  />\r\n                </MediaPlayer>\r\n              </div>\r\n              <div className='col-md-3'>\r\n                <StyledButton\r\n                  to={audioUrl}\r\n                  text='Tải xuống'\r\n                  icon={DownloadIcon}\r\n                  className='btn--red'\r\n                  isMarginLeft={false}\r\n                />\r\n              </div>\r\n            </PlayerContainer>\r\n          </FlexContent>\r\n        </Wrapper>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst Img = styled.img`\r\n  cursor: pointer;\r\n  width: 26px;\r\n  height: 26px;\r\n`\r\nconst StyledStop = styled(Img)`\r\n  opacity: ${props => (props.playing ? '0.5' : '1')};\r\n`\r\n\r\nconst MediaPlayer = styled.div`\r\n  background-color: #227ca2;\r\n  padding: 0.6rem 4rem;\r\n  display: grid;\r\n  grid-template-columns: 24px 24px auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n  border-radius: 0.8rem;\r\n`\r\n\r\nconst CenterDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst P = styled.p`\r\n  margin: 0;\r\n  margin-right: 1rem;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  font-family: 'Muli', san-serif;\r\n`\r\n\r\nconst FlexContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-bottom: 1em;\r\n`\r\n\r\nconst PlayerContainer = styled.div`\r\n  margin: 1rem;\r\n  align-items: center;\r\n`\r\n\r\nconst Paper = styled.div`\r\n  height: 22rem;\r\n  width: 100%;\r\n  position: relative;\r\n  border-radius: 13px;\r\n  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.16);\r\n  background: white;\r\n`\r\nconst PaperContent = styled.div`\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  right: 1.5rem;\r\n  bottom: 0.5rem;\r\n  left: 1.5rem;\r\n  background: linear-gradient(transparent, transparent 29px, gray 29px);\r\n  background-size: 30px 30px;\r\n  opacity: 0.3;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 100%;\r\n  max-width: 100%;\r\n  height: 100%;\r\n  max-height: 100%;\r\n  line-height: 30px;\r\n  padding: 0 5px;\r\n  border: 0;\r\n  outline: 0;\r\n  background: transparent;\r\n  color: #000;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  box-sizing: border-box;\r\n  z-index: 1;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  justify-content: center;\r\n  display: flex;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledDropdown = styled(DropdownMenuVoice)`\r\n  padding: 1rem 4rem;\r\n  border-radius: 0.8rem;\r\n  font-size: 18px;\r\n  font-family: 'Muli', sans-serif;\r\n  -webkit-transition: all 0.5s;\r\n  transition: all 0.5s;\r\n  background: #b9ccc6;\r\n  color: #000000;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst Dropdown1 = styled(StyledDropdown)`\r\n  width: 76%;\r\n`\r\n","module.exports = __webpack_public_path__ + \"static/media/download.64724051.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.f60387d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.ae06ac45.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.34089472.svg\";","import React, { useContext, useEffect, useState as defaultState } from 'react'\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\n\r\nimport { useState } from '../../../../packages/core'\r\n\r\nimport { LoadingIndicator } from '../../../../packages/ui'\r\nimport { PreloaderContext } from '../../../Preloader'\r\n\r\nimport { SpeechSynthesis } from './SpeechSynthesis'\r\n\r\nexport const SpeechSynthesisContainer = () => {\r\n  const { mp3data } = useContext(PreloaderContext)\r\n\r\n  const initialStates = {\r\n    loading: true,\r\n    voiceId: mp3data[0].id || null,\r\n    text: 'Chưa có nội dung',\r\n    token: 'McTUDABy8FZYbKwC00OTIweLZwYWgy55'\r\n  }\r\n\r\n  const [state, setState] = useState(initialStates)\r\n\r\n  const fetchData = async () => {\r\n    const { voiceId, token, text } = state\r\n    const options = {\r\n      method: 'POST',\r\n      headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n      data: qs.stringify({\r\n        text,\r\n        voiceId,\r\n        token\r\n      }),\r\n      url: 'http://103.74.122.136:8086/api/v1/path'\r\n    }\r\n    const audio = await axios(options)\r\n\r\n    setState({\r\n      loading: false,\r\n      audioUrl: audio.data.data.url\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  if (state.loading) {\r\n    return <LoadingIndicator />\r\n  }\r\n\r\n  const onChangeVoice = voiceId => {\r\n    setState({ voiceId })\r\n  }\r\n\r\n  const onChangeText = value => {\r\n    setState({ text: value })\r\n  }\r\n\r\n  const props = {\r\n    mp3data,\r\n    state,\r\n    setState,\r\n    onChangeVoice,\r\n    onChangeText,\r\n    fetchData\r\n  }\r\n  return <SpeechSynthesis {...props} />\r\n}\r\n"],"sourceRoot":""}