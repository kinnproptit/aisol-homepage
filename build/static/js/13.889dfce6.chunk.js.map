{"version":3,"sources":["app/Shared/components/Dropdown/DropdownMenuVoice.js","app/views/Solution2/components/SpeechSynthesis.js","app/assets/download.svg","app/assets/play.svg","app/assets/stop.svg","app/assets/pause.svg","app/views/Solution2/components/SpeechSynthesisContainer.js"],"names":["StyledDropdown","styled","Dropdown","SpeechSynthesis","mp3data","onChangeVoice","state","useDispatch","useSelector","audioReducer","useState","audioUrl","setAudio","Sound","status","PLAYING","playStatus","setPlayStatus","position","setPosition","setSoundComp","text","setText","playing","setPlaying","onFetch","setOnFetch","duration","setDuration","fetchData","a","voiceId","token","options","method","headers","data","qs","stringify","url","axios","audio","useEffect","onFetchPlayButton","alert","className","Wrapper","FlexContent","Paper","PaperContent","Textarea","onChange","event","STOPPED","target","value","PlayerContainer","CenterDiv","P","Dropdown1","onClick","playFromPosition","onLoad","sound","onPlaying","onLoading","onFinishedPlaying","MediaPlayer","Img","src","ResumeIcon","PAUSED","PlayIcon","StyledStop","StopIcon","min","max","StyledButton","to","icon","DownloadIcon","isMarginLeft","buttonCustom","textCustom","img","props","div","p","textarea","Button","map","id","label","name","selected","setState","menu","key","index","Item","overlay","trigger","type","module","exports","SpeechSynthesisContainer","useContext","PreloaderContext","initialStates","loading","onChangeText"],"mappings":"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","file":"static/js/13.889dfce6.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { Menu, Dropdown, Icon } from 'antd'\n\nimport { useState } from '../../../../packages/core'\n\nexport const DropdownMenuVoice = ({\n  data = [],\n  className,\n  onClick\n}) => {\n  const options = data.map(({ id, name }) => ({\n    value: id,\n    label: name\n  }))\n\n  const [state, setState] = useState({\n    selected: options[0].label,\n    id: options[0].value\n  })\n\n  const menu = (\n    <Menu\n      onClick={({ key }) => {\n        setState({ selected: options[key].label })\n        onClick(options[key].value)\n      }}\n    >\n      {options.map(({ label }, index) => {\n        return <Menu.Item key={index}>{label}</Menu.Item>\n      })}\n    </Menu>\n  )\n  return (\n    <StyledDropdown className={`${className} max-width-mobile`} overlay={menu} trigger={['click']}>\n        <Link className='ant-dropdown-link' to='#'>\n          {state.selected} <Icon type='down' />\n        </Link>\n    </StyledDropdown>\n  )\n}\n\nconst StyledDropdown = styled(Dropdown)`\n  font-size: 18px;\n`\n\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Sound from 'react-sound'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport qs from 'qs'\nimport axios from 'axios'\n\nimport { Slider } from 'antd'\n\nimport DownloadIcon from '../../../assets/download.svg'\nimport PlayIcon from '../../../assets/play.svg'\nimport StopIcon from '../../../assets/stop.svg'\nimport ResumeIcon from '../../../assets/pause.svg'\n\nimport Button from '../../../Shared/components/Button/Button'\nimport { DropdownMenuVoice } from '../../../Shared/components/Dropdown/DropdownMenuVoice'\n\nexport const SpeechSynthesis = ({ mp3data, onChangeVoice, state }) => {\n  const dispatch = useDispatch()\n  const audioRedux = useSelector(state => state.audioReducer)\n\n  const [audioUrl, setAudio] = useState('')\n  const [playStatus, setPlayStatus] = useState(Sound.status.PLAYING)\n  const [position, setPosition] = useState(0)\n  const [soundComp, setSoundComp] = useState(null)\n  const [text, setText] = useState('')\n  const [playing, setPlaying] = useState(false)\n  const [onFetch, setOnFetch] = useState(true)\n  const [duration, setDuration] = useState(null)\n  const [stop, setStop] = useState(false)\n  const [resume, setResume] = useState(false)\n\n  const fetchData = async () => {\n    const { voiceId, token } = state\n    const options = {\n      method: 'POST',\n      headers: { 'content-type': 'application/x-www-form-urlencoded' },\n      data: qs.stringify({\n        text,\n        voiceId,\n        token\n      }),\n      url: 'http://103.74.122.136:8086/api/v1/path'\n    }\n    const audio = await axios(options)\n    if (audio.data.status === 0) {\n      setAudio(audio.data.data.url)\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const onFetchPlayButton = async () => {\n    if (text === '') {\n      alert('Vui lòng nhập nội dung')\n    } else {\n      // setTimeout(() => {\n      setPlaying(!playing)\n      await fetchData()\n      setPlayStatus(Sound.status.PLAYING)\n      // }, 1000)\n    }\n  }\n\n  const onClickPlayButton = () => {\n    setPlaying(true)\n    setPlayStatus(Sound.status.PLAYING)\n  }\n\n  const onClickPausedButton = () => {\n    setPlaying(false)\n    setOnFetch(false)\n    setPlayStatus(Sound.status.PAUSED)\n  }\n\n  const onChangeText = event => {\n    setPlayStatus(Sound.status.STOPPED)\n    setText(event.target.value)\n    // setAudio('')\n  }\n\n  return (\n    <section>\n      <div className='margin-bottom-large'>\n        <h1 className='application__heading text-center margin-bottom-medium advantage__heading'>\n          Trải nghiệm\n        </h1>\n        <Wrapper>\n          <FlexContent className='container'>\n            <Paper>\n              <PaperContent>\n                <Textarea onChange={onChangeText}>\n                  Nội dung trải nghiệm\n                </Textarea>\n              </PaperContent>\n            </Paper>\n            <PlayerContainer className='row'>\n              <CenterDiv className='col-lg-4 d-block-mobile top_ma'>\n                <P>Giọng đọc</P>\n                <Dropdown1 data={mp3data} onClick={onChangeVoice} />\n              </CenterDiv>\n              <div className='col-lg-4 top_ma'>\n                <Sound\n                  url={audioUrl}\n                  playFromPosition={position}\n                  playStatus={playStatus}\n                  onLoad={sound => {\n                    setSoundComp(sound)\n                  }}\n                  onPlaying={sound => {\n                    setPosition(sound.position)\n                  }}\n                  onLoading={sound => setDuration(sound.duration)}\n                  onFinishedPlaying={() => {\n                    setPlaying(false)\n                    setOnFetch(true)\n                    setPlayStatus(Sound.status.STOPPED)\n                    setPosition(0)\n                  }}\n                />\n                <MediaPlayer>\n                  {!playing ? (\n                    onFetch ? (\n                      <Img src={PlayIcon} onClick={onFetchPlayButton} />\n                    ) : (\n                      <Img src={PlayIcon} onClick={onClickPlayButton} />\n                    )\n                  ) : (\n                    <Img src={ResumeIcon} onClick={onClickPausedButton} />\n                  )}\n                  <StyledStop\n                    playing={!playing && onFetch}\n                    src={StopIcon}\n                    onClick={() => {\n                      setPlaying(false)\n                      setOnFetch(true)\n                      setPosition(0)\n                      setPlayStatus(Sound.status.PAUSED)\n                    }}\n                  />\n                  <Slider\n                    value={position}\n                    min={0}\n                    max={(duration && duration) || 100}\n                    onChange={value => setPosition(value)}\n                  />\n                </MediaPlayer>\n              </div>\n              <div className='col-lg-4 top_ma'>\n                <StyledButton\n                  to={audioUrl}\n                  text='Tải xuống'\n                  icon={DownloadIcon}\n                  className='btn--red'\n                  isMarginLeft={false}\n                  buttonCustom='button_red'\n                  textCustom='text_red'\n                  className=' btn--red red'\n                />\n              </div>\n            </PlayerContainer>\n          </FlexContent>\n        </Wrapper>\n      </div>\n    </section>\n  )\n}\n\nconst Img = styled.img`\n  cursor: pointer;\n  width: 26px;\n  height: 26px;\n`\nconst StyledStop = styled(Img)`\n  opacity: ${props => (props.playing ? '0.5' : '1')};\n`\n\nconst MediaPlayer = styled.div`\n  background-color: #227ca2;\n  padding: 0.6rem 4rem;\n  display: grid;\n  grid-template-columns: 24px 24px auto;\n  grid-gap: 16px;\n  align-items: center;\n  border-radius: 0.8rem;\n`\n\nconst CenterDiv = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst P = styled.p`\n  margin: 0;\n  margin-right: 1rem;\n`\n\nconst Wrapper = styled.div`\n  font-family: 'Muli', san-serif;\n`\n\nconst FlexContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-bottom: 1em;\n`\n\nconst PlayerContainer = styled.div`\n  margin: 1rem;\n  align-items: center;\n`\n\nconst Paper = styled.div`\n  height: 22rem;\n  width: 100%;\n  position: relative;\n  border-radius: 13px;\n  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.16);\n  background: white;\n`\nconst PaperContent = styled.div`\n  position: absolute;\n  top: 0.5rem;\n  right: 1.5rem;\n  bottom: 0.5rem;\n  left: 1.5rem;\n  background: linear-gradient(transparent, transparent 29px, gray 29px);\n  background-size: 30px 30px;\n  opacity: 0.3;\n`\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  max-width: 100%;\n  height: 100%;\n  max-height: 100%;\n  line-height: 30px;\n  padding: 0 5px;\n  border: 0;\n  outline: 0;\n  background: transparent;\n  color: #000;\n  font-weight: bold;\n  font-size: 16px;\n  box-sizing: border-box;\n  z-index: 1;\n`\n\nconst StyledButton = styled(Button)`\n  justify-content: center;\n  display: flex;\n  width: 100%;\n`\n\nconst StyledDropdown = styled(DropdownMenuVoice)`\n  padding: 1rem 4rem;\n  border-radius: 0.8rem;\n  font-size: 18px;\n  font-family: 'Muli', sans-serif;\n  -webkit-transition: all 0.5s;\n  transition: all 0.5s;\n  background: #b9ccc6;\n  color: #000000;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Dropdown1 = styled(StyledDropdown)`\n  width: 86%;\n`\n","module.exports = __webpack_public_path__ + \"static/media/download.a21e2fd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.522eddc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.1a5e9b8f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.4d5d573d.svg\";","import React, { useContext, useEffect, useState as defaultState } from 'react'\nimport axios from 'axios'\nimport qs from 'qs'\n\nimport { useState } from '../../../../packages/core'\n\nimport { LoadingIndicator } from '../../../../packages/ui'\nimport { PreloaderContext } from '../../../Preloader'\n\nimport { SpeechSynthesis } from './SpeechSynthesis'\n\nexport const SpeechSynthesisContainer = () => {\n  const { mp3data } = useContext(PreloaderContext)\n\n  const initialStates = {\n    loading: true,\n    voiceId: mp3data[0].id || null,\n    text: 'Chưa có nội dung',\n    token: 'McTUDABy8FZYbKwC00OTIweLZwYWgy55'\n  }\n\n  const [state, setState] = useState(initialStates)\n\n  const fetchData = async () => {\n    const { voiceId, token, text } = state\n    const options = {\n      method: 'POST',\n      headers: { 'content-type': 'application/x-www-form-urlencoded' },\n      data: qs.stringify({\n        text,\n        voiceId,\n        token\n      }),\n      url: 'http://103.74.122.136:8086/api/v1/path'\n    }\n    const audio = await axios(options)\n\n    setState({\n      loading: false,\n      audioUrl: audio.data.data.url\n    })\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  if (state.loading) {\n    return <LoadingIndicator />\n  }\n\n  const onChangeVoice = voiceId => {\n    setState({ voiceId })\n  }\n\n  const onChangeText = value => {\n    setState({ text: value })\n  }\n\n  const props = {\n    mp3data,\n    state,\n    setState,\n    onChangeVoice,\n    onChangeText,\n    fetchData\n  }\n  return <SpeechSynthesis {...props} />\n}\n"],"sourceRoot":""}