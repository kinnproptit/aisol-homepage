{"version":3,"sources":["packages/ui/components/ErrorBoundary/ErrorBoundary.js","packages/ui/components/SearchBar/SearchBar.js","packages/ui/components/LoadingIndicator/LoadingIndicator.js","packages/ui/components/Loader/SpinnerLoader.js","packages/ui/components/Loader/RingLoader.js","packages/ui/components/Icon/Icon.js","packages/ui/services/ToastService/ToastService.js","packages/ui/index.js","environments/index.js","packages/ui/components/SearchBar/search.svg","packages/ui/assets/loading.svg","app/redux/reducers/home.js","app/redux/reducers/index.js","app/redux/action-types.js","app/redux/index.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","error","errorInfo","info","this","setState","Container","Graphic","Cog","xmlns","viewBox","d","Title","process","children","React","Component","styled","div","h1","CogAnimation","keyframes","svg","details","defaultValue","onFilterChange","placeholder","noLabel","label","restProps","Wrapper","Label","InputWrapper","Input","onChange","event","target","value","SearchIcon","input","attrs","type","StandardSearchIcon","fill","width","height","LoadingIndicator","LoadingIndicatorWrapper","src","Loading","small","Ring","loadingRing","img","ToastMessage","message","replace","ToastService","notify","options","toast","position","Position","BOTTOM_LEFT","Type","INFO","ERROR","warning","WARNING","success","SUCCESS","POSITION","TYPE","module","exports","STATE_INIT","isLoading","sessions","combineReducers","homeReducer","payload","client","axios","create","baseURL","environments","responseType","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","axiosMiddleware","NODE_EN","logger","createStore","rootReducer","applyMiddleware","Boolean","location","hostname","match","App","loadable","fallback","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"0wCAIO,IAAMA,EAAb,YACE,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAAEC,MAAO,KAAMC,UAAW,MAFtB,EADrB,+EAMoBD,EAAOE,GACvBC,KAAKC,SAAS,CACZJ,QACAC,UAAWC,MATjB,+BAcI,OAAIC,KAAKJ,MAAME,UAEX,kBAACI,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAKC,MAAM,6BAA6BC,QAAQ,aAC9C,0BAAMC,EAAE,ujBAGZ,kBAACC,EAAD,eACCC,GAUAT,KAAKL,MAAMe,UAAY,SAjClC,GAAmCC,IAAMC,WAqCnCV,EAAYW,UAAOC,IAAV,KAeTX,EAAUU,UAAOC,IAAV,KAIPN,EAAQK,UAAOE,GAAV,KAOLC,EAAeC,oBAAH,KAKZb,EAAMS,UAAOK,IAAV,IAKMF,G,GAGCH,UAAOM,QAAV,K,43BCtDeN,mBArBH,SAAC,GAAD,IACvBO,EADuB,EACvBA,aACAC,EAFuB,EAEvBA,eACAC,EAHuB,EAGvBA,YAHuB,IAIvBC,eAJuB,aAKvBC,aALuB,MAKf,iBALe,EAMpBC,EANoB,wFAQvB,kBAACC,EAAYD,GACTF,GAAW,kBAACI,EAAD,KAAQH,GACrB,kBAACI,EAAD,KACE,kBAACC,EAAD,CACEC,SAAU,SAAAC,GAAK,OAAIV,EAAeU,EAAMC,OAAOC,QAC/CX,YAAaA,EACbF,aAAcA,IAEhB,kBAACc,EAAD,UAKsBrB,CAAH,KArBlB,IA0BDa,EAAUb,UAAOC,IAAV,KAKPa,EAAQd,UAAOC,IAAV,KAOLc,EAAef,UAAOC,IAAV,KAIZe,EAAQhB,UAAOsB,MAAMC,MAAM,CAC/BC,KAAM,QADMxB,CAAH,KAkBLqB,EAAarB,kBAAOyB,KAAoBF,MAAM,CAClDG,KAAM,OACNC,MAAO,GACPC,OAAQ,IAHS5B,CAAH,K,+NC3DT,IAAM6B,EAAmB,WAC9B,OACE,kBAACC,EAAD,KAYE,yBAAKC,IAAKC,QAMVF,EAA0B9B,UAAOC,IAAV,K,ulCCVLD,UAAOC,IAAV,KAQFD,UAAOC,IAAV,KAaOD,UAAOC,IAAV,KAwBED,UAAOC,IAAV,K,wzBClDSD,mBARF,SAAC,GAAyB,IAAvBiC,EAAsB,EAAtBA,MAAUnD,EAAY,yBACjD,OACE,kBAAC,EAAD,iBAAaA,EAAb,CAAoBmD,MAAOA,IACzB,kBAACC,EAAD,CAAMD,MAAOA,OAKSjC,CAAH,KARlB,IAcDa,EAAUb,UAAOC,IAAV,KAKT,SAAAnB,GAAK,OACLA,EAAMmD,OAAN,+CAOEE,EAAc/B,oBAAH,KASX8B,EAAOlC,UAAOC,IAAV,KAQN,SAAAnB,GAAK,OACLA,EAAMmD,OAAN,6FAOWE,G,0NCpBGnC,UAAOoC,IAAV,MAEIpC,UAAOC,IAAV,MAEF,SAAAnB,GAAK,OAAIA,EAAM8C,UAChB,SAAA9C,GAAK,OAAIA,EAAM6C,SAGtB,SAAA7C,GAAK,OAAIA,EAAM4C,MAAQ,SAAW5C,EAAM4C,QAxCvC,I,yBCQDW,GAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,2BAAIA,EAAQC,QAAQ,iBAAkB,IAAtC,MAGIC,GAAe,CAC1BC,OAD0B,SACnBH,EAASI,GACd,OAAOC,aAAM,kBAAC,GAAD,CAAcL,QAASA,IAAxB,cACVM,SAAUJ,GAAaK,SAASC,aAC7BJ,KAGPxD,KAP0B,SAOrBoD,EAASI,GACZ,OAAOF,GAAaC,OAAOH,EAApB,cACLd,KAAMgB,GAAaO,KAAKC,MACrBN,KAGP1D,MAb0B,SAapBsD,EAASI,GACb,OAAOF,GAAaC,OAAOH,EAApB,cACLd,KAAMgB,GAAaO,KAAKE,OACrBP,KAGPQ,QAnB0B,SAmBlBZ,EAASI,GACf,OAAOF,GAAaC,OAAOH,EAApB,cACLd,KAAMgB,GAAaO,KAAKI,SACrBT,KAGPU,QAzB0B,SAyBlBd,EAASI,GACf,OAAOF,GAAaC,OAAOH,EAApB,cACLd,KAAMgB,GAAaO,KAAKM,SACrBX,KAGPG,SAAUF,KAAMW,SAChBP,KAAMJ,KAAMY,MC/Cd,qE,iBCAAC,EAAOC,QAAU,I,mBCAjBD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,4QCErCC,EAAa,CACjBC,WAAW,EACXC,SAAU,ICAGC,cAAgB,CAAEC,YDGlB,WAA4C,IAA3C/E,EAA0C,uDAAlC2E,EAAkC,yCAApBlC,EAAoB,EAApBA,KAAMuC,EAAc,EAAdA,QAC1C,OAAQvC,GACN,IETmB,UFUjB,OAAO,eAAKzC,EAAZ,GAAsBgF,GACxB,IER4B,mBFS1B,MAAO,GACT,QACE,OAAOhF,MGJPiF,EAASC,IAAMC,OAAO,CAC1BC,QAASC,IAAaD,QACtBE,aAAc,SAGVC,EAAmBC,OAAOC,sCAAwCC,IACpEC,EAAc,CAACC,IAAOC,IAAgBZ,IAEd,eAAxBpE,kIAAYiF,UAA0BH,EAAW,sBAAOA,GAAP,CAAoBI,OAE1DC,kBACbC,EACAV,EAAiBW,IAAe,WAAf,cAAmBP,MCVlBQ,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2D,gDCCAC,EAAMC,aAAS,kBAAM,wDAAiB,CAC1CC,SAAU3D,MAGZ4D,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAACL,EAAD,OAEFM,SAASC,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApH,GACLqH,QAAQrH,MAAMA,EAAMsD,c","file":"static/js/main.62ac5989.chunk.js","sourcesContent":["/* eslint-disable space-before-function-paren */\r\nimport React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { error: null, errorInfo: null }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({\r\n      error,\r\n      errorInfo: info\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      return (\r\n        <Container>\r\n          <Graphic>\r\n            <Cog xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'>\r\n              <path d='M29.18 19.07c-1.678-2.908-.668-6.634 2.256-8.328L28.29 5.295c-.897.527-1.942.83-3.057.83-3.36 0-6.085-2.743-6.085-6.126h-6.29c.01 1.043-.25 2.102-.81 3.07-1.68 2.907-5.41 3.896-8.34 2.21L.566 10.727c.905.515 1.69 1.268 2.246 2.234 1.677 2.904.673 6.624-2.24 8.32l3.145 5.447c.895-.522 1.935-.82 3.044-.82 3.35 0 6.066 2.725 6.083 6.092h6.29c-.004-1.035.258-2.08.81-3.04 1.676-2.902 5.4-3.893 8.325-2.218l3.145-5.447c-.9-.515-1.678-1.266-2.232-2.226zM16 22.48c-3.578 0-6.48-2.902-6.48-6.48S12.423 9.52 16 9.52c3.578 0 6.48 2.902 6.48 6.48s-2.902 6.48-6.48 6.48z' />\r\n            </Cog>\r\n          </Graphic>\r\n          <Title>Error</Title>\r\n          {process.env.NODE_ENV === 'development' && (\r\n            <Details>\r\n              {this.state.error && this.state.error.toString()}\r\n              <br />\r\n              {this.state.errorInfo.componentStack}\r\n            </Details>\r\n          )}\r\n        </Container>\r\n      )\r\n    }\r\n    return this.props.children || null\r\n  }\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  background: #d4dfe6;\r\n  min-height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #274c5e;\r\n  text-align: center;\r\n  position: relative;\r\n  flex-direction: column;\r\n  padding: 100px;\r\n`\r\n\r\nconst Graphic = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  display: block;\r\n  font-size: 2rem;\r\n  font-weight: lighter;\r\n  text-align: center;\r\n`\r\n\r\nconst CogAnimation = keyframes`\r\n    0%   {transform: rotate(0deg);}\r\n    100% {transform: rotate(360deg);}\r\n`\r\n\r\nconst Cog = styled.svg`\r\n  width: 10rem;\r\n  height: 10rem;\r\n  fill: #6aafe6;\r\n  transition: easeInOutQuint();\r\n  animation: ${CogAnimation} 5s;\r\n`\r\n\r\nconst Details = styled.details`\r\n  max-width: 50%;\r\n  font-size: 1.2rem;\r\n  font-weight: lighter;\r\n  text-align: initial;\r\n  overflow: auto;\r\n  white-space: pre-wrap;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport StandardSearchIcon from './search.svg'\r\n\r\nexport const SearchBar = ({\r\n  defaultValue,\r\n  onFilterChange,\r\n  placeholder,\r\n  noLabel = false,\r\n  label = 'Search for ...',\r\n  ...restProps\r\n}) => (\r\n  <Wrapper {...restProps}>\r\n    {!noLabel && <Label>{label}</Label>}\r\n    <InputWrapper>\r\n      <Input\r\n        onChange={event => onFilterChange(event.target.value)}\r\n        placeholder={placeholder}\r\n        defaultValue={defaultValue}\r\n      />\r\n      <SearchIcon />\r\n    </InputWrapper>\r\n  </Wrapper>\r\n)\r\n\r\nexport const SearchBarRow = styled(SearchBar)`\r\n  flex: 0 0 auto;\r\n  margin-bottom: 26px;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: #666;\r\n  padding: 4px 0;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst Input = styled.input.attrs({\r\n  type: 'text'\r\n})`\r\n  color: #333;\r\n  width: 100%;\r\n  padding: 16px;\r\n  padding-right: 50px;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n\r\n  border: 1px solid #ddd;\r\n  border-radius: 0px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst SearchIcon = styled(StandardSearchIcon).attrs({\r\n  fill: '#666',\r\n  width: 20,\r\n  height: 20\r\n})`\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 16px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Animated, { FadeAnimations } from 'animated-styled-components'\r\n\r\nimport Loading from '../../assets/loading.svg'\r\n\r\nexport const LoadingIndicator = () => {\r\n  return (\r\n    <LoadingIndicatorWrapper>\r\n      {/* <Animated\r\n        animation={{\r\n          in: FadeAnimations.FadeInBackwards,\r\n          duration_in: 1\r\n        }}\r\n        transition={{\r\n          type: 'hover',\r\n          from: { property: 'transform', value: 'scale(1) rotate(0)' },\r\n          to: { property: 'transform', value: 'scale(1.2) rotate(25deg)' }\r\n        }}\r\n      > */}\r\n      <img src={Loading} />\r\n      {/* </Animated> */}\r\n    </LoadingIndicatorWrapper>\r\n  )\r\n}\r\n\r\nconst LoadingIndicatorWrapper = styled.div`\r\n  display: flex;\r\n  flex: inherit;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: inherit;\r\n  width: inherit;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const SpinnerLoader = ({ message = 'Loading...' }) => {\r\n  return (\r\n    <LoaderContainer>\r\n      <LoadingBox>\r\n        <LoadingBox>\r\n          <CircularLoader />\r\n          <LoaderMessage>{message}</LoaderMessage>\r\n        </LoadingBox>\r\n      </LoadingBox>\r\n    </LoaderContainer>\r\n  )\r\n}\r\n\r\nconst LoaderContainer = styled.div`\r\n  height: 200px;\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  color: black;\r\n  z-index: 10;\r\n`\r\n\r\nconst LoadingBox = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  -webkit-transition: width 0.5s, height 1s; /* For Safari 3.1 to 6.0 */\r\n  transition: width 0.5s, height 1s;\r\n`\r\n\r\nconst CircularLoader = styled.div`\r\n  border: 4px solid #ccc;\r\n  border-top: 4px solid #1f73ab;\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 2s linear infinite;\r\n  margin: 0 auto;\r\n  transition: all 0.5s ease-out;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nconst LoaderMessage = styled.div`\r\n  padding: 1em 0;\r\n`\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nexport const RingLoader = ({ small, ...props }) => {\r\n  return (\r\n    <Wrapper {...props} small={small}>\r\n      <Ring small={small} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport const ButtonLoader = styled(RingLoader)`\r\n  position: absolute;\r\n  right: 30px;\r\n  top: 10px;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  ${props =>\r\n    props.small &&\r\n    `\r\n    width: 30px;\r\n    height: 30px;\r\n  `};\r\n`\r\n\r\nconst loadingRing = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst Ring = styled.div`\r\n  box-sizing: border-box;\r\n  display: block;\r\n  position: absolute;\r\n  width: 64px;\r\n  height: 64px;\r\n  margin: 8px;\r\n  border: 8px solid #fff;\r\n  ${props =>\r\n    props.small &&\r\n    `\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 5px;\r\n    border: 5px solid #fff;\r\n  `} border-radius: 50%;\r\n  animation: ${loadingRing} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n  border-color: #fff #fff #fff transparent;\r\n  animation-delay: -0.15s;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const Icon = ({\r\n  source,\r\n  height = '20px',\r\n  fill,\r\n  width = '20px',\r\n  className,\r\n  isImage = false,\r\n  ...props\r\n}) => {\r\n  if (/.(jpe?g|png|gif|bmp)$/i.test(source) || isImage) {\r\n    return (\r\n      <IconImage\r\n        className={className}\r\n        src={source}\r\n        height={height}\r\n        width={width}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <IconSource\r\n      className={className}\r\n      fill={fill}\r\n      height={height}\r\n      width={width}\r\n      dangerouslySetInnerHTML={{ __html: source }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst IconImage = styled.img``\r\n\r\nconst IconSource = styled.div`\r\n  svg {\r\n    height: ${props => props.height};\r\n    width: ${props => props.width};\r\n  }\r\n  path {\r\n    ${props => props.fill && 'fill: ' + props.fill};\r\n  }\r\n`\r\n","/* eslint-disable space-before-function-paren */\r\nimport React from 'react'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport { toast } from 'react-toastify'\r\n\r\n/*\r\n * Adapter for react-toastify\r\n * https://github.com/fkhadra/react-toastify\r\n **/\r\n\r\nconst ToastMessage = ({ message }) => {\r\n  return <p>{message.replace('GraphQL error:', '')} </p>\r\n}\r\n\r\nexport const ToastService = {\r\n  notify(message, options) {\r\n    return toast(<ToastMessage message={message} />, {\r\n      position: ToastService.Position.BOTTOM_LEFT,\r\n      ...options\r\n    })\r\n  },\r\n  info(message, options) {\r\n    return ToastService.notify(message, {\r\n      type: ToastService.Type.INFO,\r\n      ...options\r\n    })\r\n  },\r\n  error(message, options) {\r\n    return ToastService.notify(message, {\r\n      type: ToastService.Type.ERROR,\r\n      ...options\r\n    })\r\n  },\r\n  warning(message, options) {\r\n    return ToastService.notify(message, {\r\n      type: ToastService.Type.WARNING,\r\n      ...options\r\n    })\r\n  },\r\n  success(message, options) {\r\n    return ToastService.notify(message, {\r\n      type: ToastService.Type.SUCCESS,\r\n      ...options\r\n    })\r\n  },\r\n  Position: toast.POSITION,\r\n  Type: toast.TYPE\r\n}\r\n","export { ErrorBoundary } from './components/ErrorBoundary/ErrorBoundary'\r\nexport { SearchBar } from './components/SearchBar/SearchBar'\r\nexport { LoadingIndicator } from './components/LoadingIndicator/LoadingIndicator'\r\nexport { SpinnerLoader } from './components/Loader/SpinnerLoader.js'\r\nexport { RingLoader, ButtonLoader } from './components/Loader/RingLoader.js'\r\nexport { Icon } from './components/Icon/Icon'\r\n\r\nexport { ToastService } from './services/ToastService/ToastService'\r\n","module.exports = {}\r\n","module.exports = __webpack_public_path__ + \"static/media/search.4facf638.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.1161903b.svg\";","import { LOADING, GET_ALL_SESSIONS } from '../action-types'\r\n\r\nconst STATE_INIT = {\r\n  isLoading: false,\r\n  sessions: []\r\n}\r\n\r\nexport default (state = STATE_INIT, { type, payload }) => {\r\n  switch (type) {\r\n    case LOADING:\r\n      return { ...state, ...payload }\r\n    case GET_ALL_SESSIONS:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n\r\nimport homeReducer from './home'\r\n\r\nexport default combineReducers({ homeReducer })\r\n","export const LOADING = 'LOADING'\r\nexport const SUCCESS = 'SUCCESS'\r\nexport const FAIL = 'FAIL'\r\nexport const GET_ALL_SESSIONS = 'GET_ALL_SESSIONS'\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport axios from 'axios'\r\nimport axiosMiddleware from 'redux-axios-middleware'\r\nimport logger from 'redux-logger'\r\n\r\nimport environments from '../../environments'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst client = axios.create({\r\n  baseURL: environments.baseURL,\r\n  responseType: 'json'\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet middlewares = [thunk, axiosMiddleware(client)]\r\n\r\nif (process.env.NODE_EN !== 'production') middlewares = [...middlewares, logger]\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middlewares))\r\n)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  // eslint-disable-next-line no-undef\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport loadable from '@loadable/component'\r\n\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport store from './app/redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport 'owl.carousel/dist/assets/owl.carousel.css'\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n// import './reset.css'\r\nimport './index.css'\r\nimport 'antd/dist/antd.css'\r\nimport './packages/css/main.css'\r\n\r\nimport { LoadingIndicator } from './packages/ui'\r\n\r\nconst App = loadable(() => import('./app'), {\r\n  fallback: LoadingIndicator\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}